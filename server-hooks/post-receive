#!/bin/sh

# Create or update posts with markdown
post_with_markdown() {
    # Check commit message in HEAD to determine if it needs to create or update posts.
    commit_msg=$(git log -1 --format="format:%s")
    case $commit_msg in nopost*)
        echo "----------------"
        echo "No posts are made"
        echo "----------------"
        exit 0
    esac

    # ------------------------Post with changed files

    if [ $oldrev = "0000000000000000000000000000000000000000" ]; then
        new_files=$(git show HEAD --format='' --name-only --diff-filter=A)
        modified_files=$(git show HEAD --format='' --name-only --diff-filter=M)
    else
        new_files=$(git diff $oldrev $newrev --name-only --diff-filter=A)
        modified_files=$(git diff $oldrev $newrev --name-only --diff-filter=M)
    fi

    # Set working tree to the right folder rather than .git folder
    export GIT_DIR=`pwd`; cd ..; export GIT_WORK_TREE=`pwd`

    echo "----------------"
    echo "Create new posts"
    echo "----------------"
    for f in $new_files
    do
        echo $f
        wp create $f
    done

    echo "----------------"
    echo "Update posts"
    echo "----------------"
    for f in $modified_files
    do
        echo $f
        wp update $f
    done

    # If there are markdown files that are updated.
    if [ "$(git diff --name-only)" ]; then
        echo "----------------"
        echo "Commit updated markdown files"
        echo "----------------"

        git add -u
        git diff --cached --name-status
        git commit -m "auto: update markdown files" && echo "----------------"; echo "Please run 'git pull' command to get updated markdown files."; echo "----------------"
    fi
}

while read oldrev newrev refname; do
    if [ $refname = "refs/heads/master" -o $refname = "refs/heads/main" ]; then
        post_with_markdown $oldrev $newrev
    fi
done
